# files/models.py
from django.db import models
from django.contrib.auth.models import User, Group
from common.utils.helpers import io_helpers

"""
    Model for handling files with the database.
    The file itself is saved in the uploads/ - folder.
    The filepath in the model refers to the uploaded file.
"""
class File(models.Model):
    # id is autogenerated

    # Excuse me for using built-in classes (User & Group). 
    # With my django skills, they are better than self-mades
    # especially using the group as organization is bad-practise, I Suppose

    # 'organization'
    group=models.ForeignKey(
        Group, 
        on_delete=models.CASCADE
    )
    
    # uploader
    user=models.ForeignKey(
        User,
        on_delete=models.CASCADE
    )

    name= models.CharField(max_length=500)

    # TODO: Better filepath solution, maybe IPFS ;)
    filepath= models.FileField(
        upload_to = io_helpers.get_upload_folder(), 
        null=True, 
        verbose_name="")

    uploaded       = models.DateTimeField()
    download_count = models.IntegerField()

    def __str__(self):
        return self.name + ": " + str(self.filepath)
